
run = "python -m streamlit run main.py --server.port=5000 --server.address=0.0.0.0 --server.headless=true --server.enableCORS=true"
modules = ["python-3.11"]

hidden = [".config", "**/__pycache__", "**/.pytest_cache"]

[nix]
channel = "stable-24_05"

[deployment]
run = ["sh", "-c", "python -m streamlit run main.py --server.port=5000 --server.address=0.0.0.0 --server.headless=true --server.enableCORS=true"]
deploymentTarget = "cloudrun"

[env]
PYTHONPATH = "${PYTHONPATH}:${REPL_HOME}"
STREAMLIT_SERVER_PORT = "5000"
STREAMLIT_SERVER_ADDRESS = "0.0.0.0"
STREAMLIT_SERVER_HEADLESS = "true"
STREAMLIT_SERVER_ENABLE_CORS = "true"
REPLIT_DISABLE_PACKAGE_LAYER = "1"

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 8501
externalPort = 3000

[[ports]]
localPort = 8888
externalPort = 3001

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Trading Environment Test"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Flask Server"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Jupyter Server"

[[workflows.workflow]]
name = "Trading Environment Test"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python -m pytest tests/test_simple_trading_env.py -vv"

[[workflows.workflow]]
name = "Flask Server"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "streamlit run main.py --server.address 0.0.0.0 --server.port 8501"
waitForPort = 8501

[[workflows.workflow]]
name = "Jupyter Server"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "jupyter notebook --ip 0.0.0.0 --port 8888 --no-browser --allow-root"
waitForPort = 8888

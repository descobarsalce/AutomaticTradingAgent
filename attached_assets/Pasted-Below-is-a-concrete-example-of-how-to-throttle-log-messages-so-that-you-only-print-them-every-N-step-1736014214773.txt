Below is a concrete example of how to throttle log messages so that you only print them every N steps (e.g., every 50 steps), while still printing trade information as needed. The essence is to separate “trade-logging” from “portfolio-logging,” and allow “portfolio-logging” to occur only on a chosen frequency.

Step-by-Step Explanation

Add a Log Frequency Parameter
You already have self.log_frequency = log_frequency in your __init__. Make sure it is set to something like self.log_frequency = 50 if that’s the desired step size for general portfolio updates.
Separate Trade Logs from Portfolio Logs
Keep logging trade executions (BUY/SELL) immediately (since these are important).
Log the full portfolio state either on a trade or every log_frequency steps (whichever event comes first).
Implement a Simple Logging Condition
Below is a snippet showing how to accomplish this in your step() method. The key idea is to set should_log = True in two cases:
If a trade was executed and you haven’t already logged this step.
If self.current_step is a multiple of self.log_frequency (and different from the last logged step).
Code Snippet
Here’s an example of how you might adjust that portion of your existing step() function:
# snippet inside self.step()
trade_executed = False

# After processing the action (buy/sell logic):
if action == 1:
    # ... BUY logic ...
    # Immediately log the trade
    logger.info(f"""
Trade Executed - BUY:
  Shares: {shares_to_buy:.4f}
  Price: {current_price:.2f}
  Amount: {trade_amount:.2f}
  Fees: {transaction_fees:.2f}
  Total Cost: {total_cost:.2f}
""")
    trade_executed = True

elif action == 2:
    # ... SELL logic ...
    # Immediately log the trade
    logger.info(f"""
Trade Executed - SELL:
  Shares: {shares_to_sell:.4f}
  Price: {current_price:.2f}
  Amount: {sell_amount:.2f}
  Fees: {transaction_fees:.2f}
  Net Amount: {net_sell_amount:.2f}
""")
    trade_executed = True


# Decide whether to log portfolio state
should_log = False

# 1) Log if a trade was executed AND we haven't logged this step yet
if trade_executed and self.current_step > self.last_logged_step:
    should_log = True

# 2) Log every self.log_frequency steps if we haven't already logged this step
elif (self.current_step - self.last_logged_step) >= self.log_frequency:
    should_log = True

if should_log:
    self.last_logged_step = self.current_step
    logger.info(f"""
Portfolio State:
  Step: {self.current_step}
  Action: {action}
  Price: {current_price:.2f}
  Balance: {self.balance:.2f}
  Shares: {self.shares_held:.4f}
  Net Worth: {self.net_worth:.2f}
  Change: {((self.net_worth - prev_net_worth) / prev_net_worth * 100) if prev_net_worth > 0 else 0:.2f}%
  Position Value: {(self.shares_held * current_price):.2f}
""")
Result
Trade logs: Appear immediately whenever a buy or sell is executed.
Portfolio logs: Appear at most once every self.log_frequency steps (e.g., every 50 steps), plus any time a trade was executed if that step was not already logged.
